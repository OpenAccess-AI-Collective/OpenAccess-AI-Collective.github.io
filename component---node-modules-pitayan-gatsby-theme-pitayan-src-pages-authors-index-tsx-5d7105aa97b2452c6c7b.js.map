{"version":3,"file":"component---node-modules-pitayan-gatsby-theme-pitayan-src-pages-authors-index-tsx-5d7105aa97b2452c6c7b.js","mappings":"0KAcA,MAAMA,EAAyCC,IAA+B,IAA9B,KAAEC,EAAI,UAAEC,EAAY,IAAIF,EACtE,MAAMG,EAAOC,EAAAA,GAAiBH,GAAMA,KAEpC,OAAOI,EAAAA,cAACF,EAAI,CAACD,UAAWA,GAAa,EAGjCI,EAA0CC,IAA+B,IAA9B,KAAEC,EAAI,UAAEN,EAAY,IAAIK,EACvE,OACEF,EAAAA,cAAA,MAAIH,UAAS,qDAAuDA,GACjEM,EAAKC,KAAIC,IAAqB,IAADC,EAAA,IAAlBC,EAAKC,GAAQH,EACnBI,GAA+B,QAA3BH,EAAMP,EAAAA,GAAiBQ,UAAI,IAAAD,OAAA,EAArBA,EAAuBI,KAAG,IAAIF,EAO5C,OAJI,mBAAmBG,KAAKH,IAAY,WAAWG,KAAKH,MACtDC,EAAOD,GAIPR,EAAAA,cAAA,MAAIY,IAAKL,GACPP,EAAAA,cAAA,KAAGS,KAAMA,EAAMI,OAAO,SAASC,IAAI,cACjCd,EAAAA,cAACN,EAAU,CAACG,UAAU,YAAYD,KAAMW,KAEvC,IAGN,EAIT,OAAeQ,EAAAA,EAAAA,MAAKd,GCvBpB,MAAMe,EAAwCrB,IAQvC,IARwC,IAC7CsB,EAAG,KACHC,EAAI,QACJC,EACAC,QAAUC,OAAQC,EAAOzB,UAAW0B,EAAkB,aAAa,IACnEhB,EAAG,UACHV,EAAY,GAAE,OACd2B,GACD7B,EACC,OACEK,EAAAA,cAAA,OAAKH,UAAcA,EAAS,0CAC1BG,EAAAA,cAAA,OAAKH,UAAU,gCACbG,EAAAA,cAACyB,EAAAA,EAAM,CAAC5B,UAAS,QAAU0B,EAAmBJ,QAASA,EAASG,MAAOA,KAEzEtB,EAAAA,cAAA,OAAKH,UAAU,+EACbG,EAAAA,cAAA,MAAIH,UAAU,kCACXqB,EACAM,GACCxB,EAAAA,cAAC0B,EAAAA,GAAI,CAACC,GAAE,aAAeH,EAAU3B,UAAU,kBACzCG,EAAAA,cAAA,aAAO,IAAEwB,KAIfxB,EAAAA,cAAA,KAAGH,UAAU,aAAaoB,GAC1BjB,EAAAA,cAACC,EAAW,CAACJ,UAAU,wBAAwBM,KAAMI,KAEnD,EAIV,OAAeQ,EAAAA,EAAAA,MAAKC,E,8CCzCpB,MAAMS,EAAgC9B,IAAyC,IAAxC,MAAE2B,EAAK,QAAEH,EAAO,UAAEtB,EAAY,IAAIF,EACvE,MAAMiC,GAAcC,EAAAA,EAAAA,GAASP,GAE7B,OAAOM,EACL5B,EAAAA,cAAC8B,EAAAA,EAAW,CACVjC,UAAS,+EAAiFA,EAC1FyB,MAAOM,EACPG,IAAI,KAGN/B,EAAAA,cAAA,UACEH,UAAS,gEAAkEA,EAC3E,eAAcsB,GAEjB,EAGH,KAAeJ,EAAAA,EAAAA,MAAKU,E,yECIpB,MAAMO,EAAkCrC,IAIlC,IAHJQ,MACE8B,gBAAkBC,MAAOC,KAE5BxC,EACC,MAAM,QAAEyC,IAAYC,EAAAA,EAAAA,MAEpB,OACErC,EAAAA,cAACsC,EAAAA,EAAa,CAACC,QAAYH,EAAO,WAAYI,UAAU,WACtDxC,EAAAA,cAAA,MAAIH,UAAU,yEAAwE,YAC1EsC,EAAQM,OAAO,KAE3BzC,EAAAA,cAAA,OAAKH,UAAU,+EACZsC,EAAQ/B,KACPF,IAAA,IAAC,KAAEgB,EAAI,QAAEC,EAAO,OAAEK,EAAM,OAAEJ,EAAM,IAAEb,EAAG,IAAEU,GAAKf,EAAA,OAC1CF,EAAAA,cAACgB,EAAAA,EAAU,CACTnB,UAAU,mGACVe,IAAKY,EACLP,IAAKA,EACLC,KAAMA,EACNC,QAASA,EACTC,OAAQA,EACRb,IAAKA,EACLiB,OAAQA,GACR,KAIM,EAIpB,WAAeT,EAAAA,EAAAA,MAAKiB,E","sources":["webpack://www/./node_modules/@pitayan/gatsby-theme-pitayan/src/components/SocialGroup/index.tsx","webpack://www/./node_modules/@pitayan/gatsby-theme-pitayan/src/components/AuthorCard/index.tsx","webpack://www/./node_modules/@pitayan/gatsby-theme-pitayan/src/components/Avatar/index.tsx","webpack://www/./node_modules/@pitayan/gatsby-theme-pitayan/src/pages/authors/index.tsx"],"sourcesContent":["import React, { memo } from \"react\"\n\nimport { SOCIAL_RESOURCES } from \"@pitayan/gatsby-theme-pitayan/src/constants\"\n\ntype SocialIconsProps = {\n  icon: string\n  className?: string\n}\n\ntype SocialGroupProps = {\n  data: [string, string][]\n  className?: string\n}\n\nconst SocialIcon: React.FC<SocialIconsProps> = ({ icon, className = \"\" }) => {\n  const Icon = SOCIAL_RESOURCES[icon].icon\n\n  return <Icon className={className} />\n}\n\nconst SocialGroup: React.FC<SocialGroupProps> = ({ data, className = \"\" }) => {\n  return (\n    <ul className={`list-none grid grid-flow-col-dense auto-cols-auto ${className}`}>\n      {data.map(([sns, profile]) => {\n        let href = `${SOCIAL_RESOURCES[sns]?.url}/${profile}`\n\n        // Use the given url If the given platform id is an HTTP url or \"mailto\"\n        if (/^(?:https?:\\/\\/)/.test(profile) || /^mailto:/.test(profile)) {\n          href = profile\n        }\n\n        return (\n          <li key={sns}>\n            <a href={href} target=\"_blank\" rel=\"noreferrer\">\n              <SocialIcon className=\"site-link\" icon={sns} />\n            </a>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default memo(SocialGroup)\n","import { Link } from \"gatsby\"\nimport { ImageDataLike } from \"gatsby-plugin-image\"\nimport React, { memo } from \"react\"\n\nimport Avatar from \"../Avatar\"\nimport SocialGroup from \"../SocialGroup\"\n\ntype AuthorCardProps = {\n  avatar: {\n    normal: ImageDataLike\n    className?: string\n  }\n  bio: string\n  className?: string\n  name: string\n  initial: string\n  sns: any\n  yamlId?: string\n}\n\nconst AuthorCard: React.FC<AuthorCardProps> = ({\n  bio,\n  name,\n  initial,\n  avatar: { normal: image, className: avatarClassName = \"h-32 w-32\" },\n  sns,\n  className = \"\",\n  yamlId,\n}) => {\n  return (\n    <div className={`${className} flex flex-wrap space-x-0 sm:space-x-8`}>\n      <div className=\"w-full sm:w-auto text-center\">\n        <Avatar className={`mb-4 ${avatarClassName}`} initial={initial} image={image} />\n      </div>\n      <div className=\"flex flex-col items-stretch justify-between flex-1 text-center sm:text-left\">\n        <h3 className=\"leading-tight md:leading-tight\">\n          {name}\n          {yamlId &&\n            <Link to={`/authors/@${yamlId}`} className=\"site-link mx-2\">\n              <small>@{yamlId}</small>\n            </Link>\n          }\n        </h3>\n        <p className=\"text-base\">{bio}</p>\n        <SocialGroup className=\"max-w-lg text-xl my-0\" data={sns} />\n      </div>\n    </div>\n  )\n}\n\nexport default memo(AuthorCard)\n","import React, { memo } from \"react\"\nimport { GatsbyImage, getImage, ImageDataLike } from \"gatsby-plugin-image\"\n\ntype AvatarProps = {\n  image: ImageDataLike\n  initial: string\n  className?: string\n}\n\nconst Avatar: React.FC<AvatarProps> = ({ image, initial, className = \"\" }) => {\n  const avatarImage = getImage(image)\n\n  return avatarImage ? (\n    <GatsbyImage\n      className={`rounded-full z-0 ring-2 ring-white dark:ring-gray-600 avatar avatar-rounded ${className}`}\n      image={avatarImage}\n      alt=\"\"\n    />\n  ) : (\n    <figure\n      className={`avatar avatar-rounded bg-gray-500 text-white ring ring-white ${className}`}\n      data-initial={initial}\n    />\n  )\n}\n\nexport default memo(Avatar)\n","import { graphql, Link } from \"gatsby\"\nimport React, { memo } from \"react\"\n\nimport DefaultLayout from \"@pitayan/gatsby-theme-pitayan/src/layouts/Default\"\nimport AuthorCard from \"@pitayan/gatsby-theme-pitayan/src/components/AuthorCard\"\n\nimport { useSiteMetadata } from \"@pitayan/gatsby-theme-pitayan/src/hooks\"\nimport { ImageDataLike } from \"gatsby-plugin-image\"\n\nexport type Author = {\n  id: string\n  yamlId: string\n  name: string\n  bio: string\n  initial: string\n  avatar: {\n    normal: ImageDataLike\n  }\n  sns: [string, string][]\n}\n\ntype AuthorsProps = {\n  [key: string]: any\n  data: {\n    allAuthorsYaml: {\n      nodes: Exclude<Author, \"sns\">[]\n    }\n  }\n}\n\nconst Authors: React.FC<AuthorsProps> = ({\n  data: {\n    allAuthorsYaml: { nodes: authors },\n  },\n}) => {\n  const { siteUrl } = useSiteMetadata()\n\n  return (\n    <DefaultLayout pageUrl={`${siteUrl}/authors`} pageTitle=\"Authors\">\n      <h1 className=\"leading-tight md:leading-tight md:text-4xl text-3xl text-center mb-32\">\n        Authors ({authors.length})\n      </h1>\n      <div className=\"grid grid-flow-row grid-cols-1 md:grid-cols-2 gap-4 max-w-4xl mx-auto mb-32\">\n        {authors.map(\n          ({ name, initial, yamlId, avatar, sns, bio }) => (\n            <AuthorCard\n              className=\"p-8 bg-gray-50 border border-solid border-gray-100 dark:bg-gray-800 dark:border-gray-800 rounded\"\n              key={yamlId}\n              bio={bio}\n              name={name}\n              initial={initial}\n              avatar={avatar}\n              sns={sns}\n              yamlId={yamlId}\n            />\n          )\n        )}\n      </div>\n    </DefaultLayout>\n  )\n}\n\nexport default memo(Authors)\n\nexport const pageQuery = graphql`\n  query {\n    allAuthorsYaml(limit: 2000) {\n      nodes {\n        id\n        yamlId\n        name\n        bio\n        sns\n        initial\n        avatar {\n          normal: childImageSharp {\n            gatsbyImageData(\n              width: 480\n              placeholder: BLURRED\n              formats: [AUTO]\n            )\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["SocialIcon","_ref","icon","className","Icon","SOCIAL_RESOURCES","React","SocialGroup","_ref2","data","map","_ref3","_SOCIAL_RESOURCES$sns","sns","profile","href","url","test","key","target","rel","memo","AuthorCard","bio","name","initial","avatar","normal","image","avatarClassName","yamlId","Avatar","Link","to","avatarImage","getImage","GatsbyImage","alt","Authors","allAuthorsYaml","nodes","authors","siteUrl","useSiteMetadata","DefaultLayout","pageUrl","pageTitle","length"],"sourceRoot":""}